The ``matrix_divided`` module
=============================

Using ``matrix_divided``
------------------------

This is matrix_divided test file in text format. First import
``matrix_divided`` from the ``matrix_divided`` module:

        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Initialize valid matrix:
        >>> matrix = [[1, 2, 3], [4, 5, 6]]

Check if div is a valid positive int:
        >>> matrix_divided(matrix, 2)
        [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Check if div is a valid positive float:
        >>> matrix_divided(matrix, 2.5)
        [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

Check if div is a valid negative int:
        >>> matrix_divided(matrix, -2)
        [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

Check if div is a valid negative float:
        >>> matrix_divided(matrix, -2.5)
        [[-0.4, -0.8, -1.2], [-1.6, -2.0, -2.4]]

Check if div is 0:
        >>> matrix_divided(matrix, 0)
        Traceback (most recent call last):
                ...
        ZeroDivisionError: division by zero

Check if div is empty:
        >>> matrix_divided(matrix)
        Traceback (most recent call last):
                ...
        TypeError: matrix_divided() missing 1 required positional argument: 'div'

Check div for data type (string):
        >>> matrix_divided(matrix, 'gobsmacked')
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

Check if div is data structure (list):
        >>> matrix_divided(matrix, [2])
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

Check for div in a single elem tuple:
        >>> matrix_divided(matrix, (2))
        [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
        
Check if div is data structure (tuple) has multiple num:
        >>> matrix_divided(matrix, (2, 4))
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

Check div for data type (dict):
        >>> matrix_divided(matrix, {'gobsmacked'})
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

Check if div is bool False:
        >>> matrix_divided(matrix, False)
        Traceback (most recent call last):
                ...
        ZeroDivisionError: division by zero

Check if div is bool True:
        >>> matrix_divided(matrix, True)
        [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Check for div as large number:
        >>> matrix_divided(matrix, 100)
        [[0.01, 0.02, 0.03], [0.04, 0.05, 0.06]]

Check if empty arguments:
        >>> matrix_divided()
        Traceback (most recent call last):
                ...
        TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Check if div is omitted:
        >>> matrix_divided(matrix)
        Traceback (most recent call last):
                ...
        TypeError: matrix_divided() missing 1 required positional argument: 'div'
