The ``print_square`` module
======================

Using ``print_square``
-------------------

This is an example test file in text format. First import
``print_square`` from the ``print_square`` module.

        >>> print_square = __import__('4-print_square').print_square

Check positive num:
    >>> print_square(4)
    ####
    ####
    ####
    ####

Check if size == 0:
    >>> print_square(0)

Check negative value:
    >>> print_square(-4)
    Traceback (most recent call last):
        ...
    ValueError: size must be >= 0

Check double negative:
    >>> print_square(--3)
    ###
    ###
    ###

Check if negative float:
    >>> print_square(-1.3)
    Traceback (most recent call last):
        ...
    ValueError: size must be >= 0

Check if size is string:
    >>> print_square('#')
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

Check if no parameter:
    >>> print_square()
    Traceback (most recent call last):
        ...
    TypeError: print_square() missing 1 required positional argument: 'size'

Check if int is tuple:
    >>> print_square((12))
    ############
    ############
    ############
    ############
    ############
    ############
    ############
    ############
    ############
    ############
    ############
    ############
